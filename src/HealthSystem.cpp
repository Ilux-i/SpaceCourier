#include "HealthSystem.h"
#include <iostream>

HealthSystem::HealthSystem() : health(3), maxHealth(3), invincibilityTimer(0.f), isInvincible(false) {
    createHearts();
}

void HealthSystem::takeDamage() {
    if (!isInvincible && health > 0) {
        health--;
        invincibilityTimer = 1.5f; // 1.5 —Å–µ–∫—É–Ω–¥—ã –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç–∏
        isInvincible = true;
        
        // –û–ë–ù–û–í–õ–Ø–ï–ú –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –°–ï–†–î–ï–¶ –ü–†–ò –ü–û–õ–£–ß–ï–ù–ò–ò –£–†–û–ù–ê
        createHearts();
        
        std::cout << "üíî –ü–æ–ª—É—á–µ–Ω —É—Ä–æ–Ω! –ó–¥–æ—Ä–æ–≤—å–µ: " << health << "/" << maxHealth << std::endl;
        
        if (health <= 0) {
            std::cout << "üíÄ –ò–≥—Ä–æ–∫ —É–º–µ—Ä!" << std::endl;
        }
    }
}

void HealthSystem::heal() {
    if (health < maxHealth) {
        health++;
        
        // –û–ë–ù–û–í–õ–Ø–ï–ú –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –°–ï–†–î–ï–¶ –ü–†–ò –õ–ï–ß–ï–ù–ò–ò
        createHearts();
        
        std::cout << "‚ù§Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–¥–æ—Ä–æ–≤—å–µ: " << health << "/" << maxHealth << std::endl;
    }
}

bool HealthSystem::isAlive() const {
    return health > 0;
}

int HealthSystem::getHealth() const {
    return health;
}

void HealthSystem::reset() {
    health = maxHealth;
    invincibilityTimer = 0.f;
    isInvincible = false;
    
    // –û–ë–ù–û–í–õ–Ø–ï–ú –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –°–ï–†–î–ï–¶ –ü–†–ò –°–ë–†–û–°–ï
    createHearts();
    
    std::cout << "üîÑ –ó–¥–æ—Ä–æ–≤—å–µ —Å–±—Ä–æ—à–µ–Ω–æ: " << health << "/" << maxHealth << std::endl;
}

void HealthSystem::update(float deltaTime) {
    if (isInvincible) {
        invincibilityTimer -= deltaTime;
        if (invincibilityTimer <= 0.f) {
            isInvincible = false;
            std::cout << "üõ°Ô∏è –ù–µ—É—è–∑–≤–∏–º–æ—Å—Ç—å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å" << std::endl;
        }
    }
}

void HealthSystem::draw(sf::RenderWindow& window) const {
    for (const auto& heart : hearts) {
        window.draw(heart);
    }
}

void HealthSystem::createHearts() {
    hearts.clear();
    
    for (int i = 0; i < maxHealth; ++i) {
        sf::CircleShape heart(15.f);
        heart.setPosition(sf::Vector2f(1100.f - i * 40.f, 20.f)); 
        
        // –ö—Ä–∞—Å–Ω–æ–µ –µ—Å–ª–∏ –µ—Å—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ, —Å–µ—Ä–æ–µ –µ—Å–ª–∏ –Ω–µ—Ç
        if (i < health) {
            heart.setFillColor(sf::Color(255, 100, 100, 255)); // –ö—Ä–∞—Å–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
        } else {
            heart.setFillColor(sf::Color(100, 100, 100, 150)); // –°–µ—Ä–æ–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
        }
        
        hearts.push_back(heart);
    }
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    std::cout << "‚ù§Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—Ü: " << health << "/" << maxHealth << std::endl;
}