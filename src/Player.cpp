#include "Player.h"
#include <iostream>

Player::Player() : onGround(false), jumpForce(500.f), moveSpeed(300.f), gravity(800.f) {
    shape.setRadius(25.f);
    shape.setFillColor(sf::Color(220, 50, 50, 255));
    shape.setPosition(position);
}

void Player::update(float deltaTime) {
    healthSystem.update(deltaTime);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é
    if (!onGround) {
        velocity.y += gravity * deltaTime;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é
    position += velocity * deltaTime;
    shape.setPosition(position);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    velocity.x = 0;
}

void Player::draw(sf::RenderWindow& window) const {
    window.draw(shape);
    healthSystem.draw(window);  // –†–∏—Å—É–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
}

sf::FloatRect Player::getBounds() const {
    return shape.getGlobalBounds();
}

void Player::jump() {
    if (onGround && healthSystem.isAlive()) {
        velocity.y = -jumpForce;
        onGround = false;
        std::cout << "üîº –ò–≥—Ä–æ–∫ –ø—Ä—ã–≥–Ω—É–ª!" << std::endl;
    }
}

void Player::move(const sf::Vector2f& direction) {
    if (healthSystem.isAlive()) {
        velocity.x = direction.x * moveSpeed;
    }
}

void Player::applyGravity(float deltaTime) {
    if (!onGround) {
        velocity.y += gravity * deltaTime;
    }
}

bool Player::isOnGround() const {
    return onGround;
}

void Player::setOnGround(bool grounded) {
    onGround = grounded;
}

HealthSystem& Player::getHealthSystem() {
    return healthSystem;
}

void Player::takeDamage() {
    healthSystem.takeDamage();
}